name: Node CI

on:
  push:
    branches-ignore:
      - release/**
      - tmp/**

jobs:

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache/Restore node_modules
      id: cache
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules-dev-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-node_modules-dev-${{ matrix.node-version }}-
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        yarn add growi-plugin-lsx growi-plugin-pukiwiki-like-linker growi-plugin-attachment-refs react-images react-motion
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn lint
      run: |
        yarn lint
    - name: Launch MongoDB
      uses: wbari/start-mongoDB@v0.2
      with:
        mongoDBVersion: 3.6
    - name: yarn test
      run: |
        yarn test
      env:
        MONGO_URI: mongodb://localhost:27017/growi_test

    - name: Slack Notification
      uses: homoluctus/slatify@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*test (${{ matrix.node-version }})*'
        channel: '#ci'
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  build-dev:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache/Restore node_modules
      id: cache
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules-dev-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-node_modules-dev-${{ matrix.node-version }}-
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        yarn add growi-plugin-lsx growi-plugin-pukiwiki-like-linker growi-plugin-attachment-refs react-images react-motion
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn build:dev
      run: |
        yarn build:dev

    - name: Slack Notification
      uses: homoluctus/slatify@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*build-dev (${{ matrix.node-version }})*'
        channel: '#ci'
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  build-prod:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache/Restore node_modules
      id: cache-dependencies
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules-prod-${{ matrix.node-version }}-$GITHUB_SHA
        restore-keys: |
          ${{ runner.OS }}-node_modules-dev-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          ${{ runner.OS }}-node_modules-dev-${{ matrix.node-version }}-
    - name: Install dependencies
      run: |
        yarn add growi-plugin-lsx growi-plugin-pukiwiki-like-linker growi-plugin-attachment-refs react-images react-motion
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: Store env vars for the key of cache-public
      run: |
        GIT_BRANCH=`echo $GITHUB_REF | sed 's/refs\/heads\///g'`
        GIT_BRANCH=`echo $GIT_BRANCH | sed 's/\//-/g'`
        TODAY=`date '+%Y%m%d'`
        echo ::set-env name=GIT_BRANCH::$GIT_BRANCH
        echo ::set-env name=TODAY::$TODAY
    - name: Cache/Restore public
      id: cache-public
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-public-prod-${{ matrix.node-version }}-${{ env.GIT_BRANCH }}-${{ env.TODAY }}
        restore-keys: |
          ${{ runner.OS }}-public-prod-${{ matrix.node-version }}-${{ env.GIT_BRANCH }}-
    - name: yarn build:prod
      if: steps.cache-public.outputs.cache-hit != 'true'
      run: |
        yarn build:prod
    - name: yarn install --production
      run: |
        yarn install --production
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: Launch MongoDB
      uses: wbari/start-mongoDB@v0.2
      with:
        mongoDBVersion: 3.6
    - name: yarn server:prod:ci
      run: |
        yarn server:prod:ci
      env:
        MONGO_URI: mongodb://localhost:27017/growi

    - name: Slack Notification
      uses: homoluctus/slatify@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*build-prod (${{ matrix.node-version }})*'
        channel: '#ci'
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
